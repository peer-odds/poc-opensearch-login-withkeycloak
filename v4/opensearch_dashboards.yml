server.name: opensearch-dashboards
server.host: "0.0.0.0"
server.customResponseHeaders:
  Access-Control-Allow-Credentials: "true"

# Enable SSL in production
server.ssl.enabled: false

opensearch.hosts: '["http://opensearch-oidc-node1:9200"]'
opensearch.ssl.verificationMode: none
opensearch.username: kibanaserver
opensearch.password: kibanaserver
opensearch.requestHeadersWhitelist: ["securitytenant", "Authorization", "authorization", "x-forwarded-for"]

opensearch_security.multitenancy.enabled: true
opensearch_security.multitenancy.tenants.preferred: ["Private", "Global"]
opensearch_security.readonly_mode.roles: ["kibana_read_only"]

# Enable in production
opensearch_security.cookie.secure: false
opensearch_security.session.keepalive: false

# OpenID Connect configuration
opensearch_security.auth.type: "openid"
opensearch_security.openid.connect_url: "https://sso-dev.odd.works/realms/poc/.well-known/openid-configuration"
opensearch_security.openid.client_id: "opensearch"
opensearch_security.openid.client_secret: "WVJopMegKL0Hk3jK2nfOmglpBxXTaQof"
opensearch_security.openid.base_redirect_url: "https://poc-tui.odd.works/"
opensearch_security.openid.scope: "openid profile email"
opensearch_security.openid.verify_hostnames: false  # Enable in production if possible
opensearch_security.openid.logout_url: "https://sso-dev.odd.works/auth/realms/poc/protocol/openid-connect/logout"
opensearch_security.openid.header: "Authorization"

server.rewriteBasePath: false

logging.verbose: true